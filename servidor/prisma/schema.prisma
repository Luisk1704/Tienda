// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Proveedor{
  id Int @id @default(autoincrement())
  nombre String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  ropas Ropa[]
}

model Ropa{
  id Int @id  @default(autoincrement())
  vendedorId Int
  nombre String
  precio Decimal
  estado String
  cantidad Int
  proveedorId Int
  proveedor Proveedor @relation(fields: [proveedorId],references: [id])
  vendedor Usuario @relation(fields: [vendedorId],references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  categorias Categoria[] 
  fotos Foto[]
  ordenes PedidoRopa[]
  preguntas Pregunta[]
}

model PedidoRopa{
  id Int @id  @default(autoincrement())
  idRopa Int
  idPedido Int
  cantidad Int
  subtotal Decimal
  pedido Pedido @relation(fields: [idPedido],references: [id])
  ropa Ropa @relation(fields: [idRopa],references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}

model Pedido{
  id Int @id @default(autoincrement())
  idPago Int
  clienteId Int
  direccionId Int 
  descuento Decimal
  IV Decimal
  estado String
  subtotal Decimal
  Total Decimal
  fecha DateTime @default(now())
  ropas PedidoRopa[]
  evaluaciones Evaluacion[]
  direccion Direccion @relation(fields: [direccionId],references: [id])  
  metodo MetodoPago @relation(fields: [idPago],references: [id])
  usuario Usuario @relation(fields: [clienteId],references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}

model Usuario{
  id Int @id @default(autoincrement())
  nombre String
  cedula String
  telefono String
  correo String @unique
  contrasenna String
  estado Boolean
  rol Rol @default(USUARIO)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  metodos MetodoPago[]
  pedidos Pedido[]
  direcciones Direccion[]
  preguntas Pregunta[]
  respuestas Respuesta[]
  informes Informe[]
  evaluaciones Evaluacion[]
  ropas Ropa[]
}

enum Rol {  
  ADMINISTRADOR
  VENDEDOR
  CLIENTE
  USUARIO
}

model MetodoPago{
  id Int @id @default(autoincrement())
  idCliente Int
  descripcion String
  proveedor String
  numeroCuenta String
  fechaExpiracion DateTime 
  usuario Usuario @relation(fields: [idCliente],references: [id])
  pedidos Pedido[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}

model Pregunta{
  id Int @id @default(autoincrement())
  descripcion String
  usuarioId Int
  usuario Usuario @relation(fields: [usuarioId],references: [id])
  ropaId Int
  ropa Ropa @relation(fields: [ropaId],references: [id])
  respuestas Respuesta[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}

model Respuesta{
  id Int @id @default(autoincrement())
  descripcion String
  usuarioId Int
  usuario Usuario @relation(fields: [usuarioId],references: [id])
  preguntas Pregunta[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}

model Informe{
  id Int @id @default(autoincrement())
  descripcion String
  usuarioId Int
  usuario Usuario @relation(fields: [usuarioId],references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}

model Evaluacion{
  id Int @id @default(autoincrement())
  nombre String
  usuarioId Int
  pedidoId Int
  nota Int
  descripcion String?
  usuarioRol String
  usuario Usuario @relation(fields: [usuarioId],references: [id])
  pedido Pedido @relation(fields: [pedidoId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}

model Categoria{
  id Int @id @default(autoincrement())
  descripcion String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  ropas Ropa[] 
}

model Direccion{
  id Int @id @default(autoincrement())  
  usuarioId Int
  usuario Usuario @relation(fields: [usuarioId],references: [id])
  provincia String
  canton String
  distrito String
  direccionExacta String
  codPostal String
  telef String
  pedidos Pedido[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now()) 
}

model Foto{
  id Int @id @default(autoincrement())
  ropaId Int
  ropa Ropa @relation(fields: [ropaId],references: [id])
  foto String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}


